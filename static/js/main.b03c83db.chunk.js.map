{"version":3,"sources":["components/Button.js","components/Header.js","components/Task.js","components/Tasks.js","components/AddTask.js","components/CurrentDate.js","App.js","reportWebVitals.js","index.js"],"names":["Button","color","text","onClick","style","backgroundColor","className","defaultProps","protoType","PropTypes","string","func","Header","title","onAdd","showAdd","Task","task","onDelete","onToggle","reminder","onDoubleClick","id","cursor","transform","day","Tasks","tasks","map","AddTask","useState","setText","setDay","setReminder","onSubmit","e","preventDefault","alert","type","placeholder","value","maxLength","onChange","target","required","fontFamily","fontSize","DateTime","Date","date","setDate","weekday","getDay","useEffect","timer","setInterval","clearInterval","marginBottom","toLocaleString","toLocaleDateString","toLocaleTimeString","App","showAddTask","setShowAddTask","setTasks","CurrentDate","Math","floor","random","newTask","length","filter","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b03c83db.chunk.js","sourcesContent":["import PropTypes from 'prop-types'\n\nconst Button = ({ color, text, onClick }) => {\n  \n    return (\n        <button \n            onClick={onClick} \n            style={{backgroundColor: color}}\n            className='btn'>{text}\n        </button>\n    )\n}\n\nButton.defaultProps = {\n    color: 'steelblue'\n}\n\nButton.protoType = {\n    text: PropTypes.string,\n    color: PropTypes.string,\n    onClick: PropTypes.func,\n}\n\nexport default Button\n","import PropTypes from 'prop-types'\nimport Button from './Button';\n\n\n\n\nconst Header = ({title, onAdd, showAdd}) => {\n    return (\n        <header className='header'>\n           <h1>{title}</h1> \n           <Button color={showAdd ? 'rgb(27, 27, 46)' : 'green'} text={showAdd  ? 'Close' : 'Add New Task'} onClick={onAdd}/>\n        </header>\n    )\n}\n\nHeader.defaultProps = {\n    title: 'Organizer',\n  }\nexport default Header\n","import { FaTrashAlt } from \"react-icons/fa\";\n\n\n\nconst Task = ({ task, onDelete, onToggle }) => {\n  return (\n    <div className={`task ${task.reminder ? 'reminder': ''}` } onDoubleClick={() => onToggle(task.id)}>\n      <h3>\n        {task.text}\n        <FaTrashAlt\n          style={{ color: \"red\", cursor: \"pointer\", transform:\"translateY(12px)\" }}\n          onClick={() => onDelete(task.id)}\n        />\n      </h3>\n      <p>{task.day}</p>\n    </div>\n  );\n};\n\nexport default Task;\n","import Task from './Task'\n\nconst Tasks = ({tasks, onDelete, onToggle}) => {\n   \n    return (\n        <>\n            {tasks.map((task) => (<Task key={task.id} task={task} onDelete={onDelete} onToggle={onToggle}/>))}\n        </>\n    )\n}\n\nexport default Tasks\n","import { useState } from 'react'\n\nconst AddTask = ({ onAdd }) => {\n  const [text, setText] = useState('')\n  const [day, setDay] = useState('')\n  const [reminder, setReminder] = useState(false)\n\nconst onSubmit = (e) => {\n    e.preventDefault()\n\n    if(!text) {\n        alert('Please add a task')\n        return\n    }\n\n    onAdd({ text, day, reminder })\n\n    setText('')\n    setDay('')\n    setReminder(false)\n\n}\n  return (\n    <form className='add-form' onSubmit={onSubmit}>\n      <div className='form-control'>\n        <label>Task</label>\n        <input\n          type='text'\n          placeholder='Add Task'\n          value={text}\n          maxLength= '16'\n          onChange={(e) => setText(e.target.value)}\n        />\n      </div>\n      <div className='form-control'>\n        <label>Day & Time</label>\n        <input\n          type='datetime-local'\n          required= '1'\n          value={day}\n          onChange={(e) => setDay(e.target.value)}\n          style={{fontFamily: 'Poppins', fontSize:\"16px\"}}\n\n        />\n      </div>\n      <input type='submit' value='Save Task' className='btn btn-block'/>\n    </form>\n  )\n}\n\nexport default AddTask","import  React, { useState , useEffect } from 'react'\n\nexport const DateTime = () => {\n\n    const [date,setDate] = useState(new Date());\n    const weekday = ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'][new Date().getDay()]\n    \n    useEffect(() => {\n        const timer = setInterval(()=>setDate(new Date()), 1000 )\n        return function cleanup() {\n            clearInterval(timer)\n        }\n    \n    });\n\n    return(\n        <div style={{marginBottom: '40px'}}>\n            <p> {weekday.toLocaleString()}</p>\n            <p> {date.toLocaleDateString()}</p>\n            <p> {date.toLocaleTimeString()}</p>\n\n        </div>\n    )\n}\n\nexport default DateTime\n","import { useState } from \"react\";\nimport Header from \"./components/Header\";\nimport Tasks from \"./components/Tasks\";\nimport AddTask from \"./components/AddTask\";\nimport CurrentDate from './components/CurrentDate';\n\n\n\nfunction App() {\n  const[showAddTask, setShowAddTask] = useState(false)\n  const [tasks, setTasks] = useState([\n    {\n      id: 1,\n      text: \"Task\",\n      day: \"2021-03-05 9:30\",\n      reminder: false,\n    },\n    {\n      id: 2,\n      text: \"Task\",\n      day: \"2021-02-19 12:50\",\n      reminder: false,\n    }\n  ]);\n\n\n  // Add task\n  const addTask = (task) => {\n    const id = Math.floor(Math.random() * 10000) + 1;\n    const newTask = { id, ...task }\n    setTasks([...tasks, newTask])\n  };\n\n  // Delete Task\n  const deleteTask = (id) => {\n    setTasks(tasks.filter((task) => task.id !== id));\n  };\n\n  // Toggle Reminder\n  const toggleReminder = (id) => {\n    setTasks(\n      tasks.map((task) =>\n        task.id === id ? { ...task, reminder : !task.reminder } : task\n      )\n    );\n  };\n\n\n  return (\n    <div className=\"container\">\n      <Header onAdd={() => setShowAddTask (!showAddTask)} showAdd={showAddTask}/>\n      <CurrentDate />\n      {showAddTask  && <AddTask onAdd={addTask}/>}\n      {tasks.length > 0 ? (\n        <Tasks tasks={tasks} onDelete={deleteTask} onToggle={toggleReminder} />\n      ) : (\n        \n        \"No task to show\"\n      )}\n      \n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}